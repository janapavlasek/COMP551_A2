-------------------------------------------------------------------------------
*  COMP 551 - Mini-Project 2: Classifying Reddit Conversations
-------------------------------------------------------------------------------

This repository contains various algorithms used to classify Reddit posts into
eight categories: hockey, movies, nba, news, nfl, politics, soccer or worldnews.
Using the Sci-Kit Learn SVM model, we achieved a score of 96.633% accuracy on
unseen testing data.

-------------------------------------------------------------------------------
*  Dependencies
-------------------------------------------------------------------------------

For running any of the models please first download:
  - nltk
  - sklearn
  - pandas
  - numpy

-------------------------------------------------------------------------------
*  Running the models
-------------------------------------------------------------------------------

For running the Naive Bayes model please run:
    python naive_bayes.py

For running the SVM model please run:
    python scisvm.py

For running the Nearest Neighbour model please run:
    python nearest_neighbour.py

For running the Decision Tree model please run:
    python decision_tree.py

For running the voting algorithm please run:
    python combine_results.py

For running the convolutional models please first install:
  - Theano
  - Lasagne
  - scipy
  - matplotlib

    Then to actually run the the 1-dimensional convolutional network run:
        python conv1d.py

    To run the 2-dimensional convolutional network run:
        python conv2d.py

-------------------------------------------------------------------------------
*  Included directories
-------------------------------------------------------------------------------

The data directory contains the given data as well as the cleaned data,
generated by clean_data.py. You can regenerate the data using this module. The
clean data is stored to avoid the need to rerun the computationally intensive
cleaning functions each time a model is used.

The results directory contains the most relevant results as well as results
needed for the combine_results.py module to run.
